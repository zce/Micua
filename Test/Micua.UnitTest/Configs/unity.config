<?xml version="1.0" encoding="utf-8" ?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

  <!--Blog-->
  <alias alias="IBlogService" type="Micua.Domain.Service.IBlogService, Micua.Domain.Service"/>
  <alias alias="BlogService" type="Micua.Domain.Service.BlogService, Micua.Domain.Service"/>

  <!--BlogMeta-->
  <alias alias="IBlogMetaService" type="Micua.Domain.Service.IBlogMetaService, Micua.Domain.Service"/>
  <alias alias="BlogMetaService" type="Micua.Domain.Service.BlogMetaService, Micua.Domain.Service"/>

  <!--Comment-->
  <alias alias="ICommentService" type="Micua.Domain.Service.ICommentService, Micua.Domain.Service"/>
  <alias alias="CommentService" type="Micua.Domain.Service.CommentService, Micua.Domain.Service"/>

  <!--CommentMeta-->
  <alias alias="ICommentMetaService" type="Micua.Domain.Service.ICommentMetaService, Micua.Domain.Service"/>
  <alias alias="CommentMetaService" type="Micua.Domain.Service.CommentMetaService, Micua.Domain.Service"/>

  <!--Link-->
  <alias alias="ILinkService" type="Micua.Domain.Service.ILinkService, Micua.Domain.Service"/>
  <alias alias="LinkService" type="Micua.Domain.Service.LinkService, Micua.Domain.Service"/>

  <!--Option-->
  <alias alias="IOptionService" type="Micua.Domain.Service.IOptionService, Micua.Domain.Service"/>
  <alias alias="OptionService" type="Micua.Domain.Service.OptionService, Micua.Domain.Service"/>

  <!--Post-->
  <alias alias="IPostService" type="Micua.Domain.Service.IPostService, Micua.Domain.Service"/>
  <alias alias="PostService" type="Micua.Domain.Service.PostService, Micua.Domain.Service"/>

  <!--PostMeta-->
  <alias alias="IPostMetaService" type="Micua.Domain.Service.IPostMetaService, Micua.Domain.Service"/>
  <alias alias="PostMetaService" type="Micua.Domain.Service.PostMetaService, Micua.Domain.Service"/>

  <!--Term-->
  <alias alias="ITermService" type="Micua.Domain.Service.ITermService, Micua.Domain.Service"/>
  <alias alias="TermService" type="Micua.Domain.Service.TermService, Micua.Domain.Service"/>

  <!--TermRelation-->
  <alias alias="ITermRelationService" type="Micua.Domain.Service.ITermRelationService, Micua.Domain.Service"/>
  <alias alias="TermRelationService" type="Micua.Domain.Service.TermRelationService, Micua.Domain.Service"/>

  <!--User-->
  <alias alias="IUserService" type="Micua.Domain.Service.IUserService, Micua.Domain.Service"/>
  <alias alias="UserService" type="Micua.Domain.Service.UserService, Micua.Domain.Service"/>

  <!--UserMeta-->
  <alias alias="IUserMetaService" type="Micua.Domain.Service.IUserMetaService, Micua.Domain.Service"/>
  <alias alias="UserMetaService" type="Micua.Domain.Service.UserMetaService, Micua.Domain.Service"/>

  <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
  
  <container>
    <register type="Micua.Core.Caching.ICacheProvider, Micua.Core" mapTo="Micua.Core.Caching.DefaultCacheProvider, Micua.Core"/>
    <register type="Micua.Core.Session.ISessionProvider, Micua.Core" mapTo="Micua.Core.Session.DefaultSessionProvider, Micua.Core"/>
    <register type="Micua.Core.Localization.ILocalizationProvider, Micua.Core" mapTo="Micua.Core.Localization.XmlLocalizationProvider, Micua.Core"/>
    <register type="System.Web.Mvc.IControllerFactory, System.Web.Mvc" mapTo="Micua.Core.IoC.Unity.UnityControllerFactory, Micua.Core"/>
  </container>
  
  <container name="ServiceContainer">

    <register type="IBlogService" mapTo="BlogService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="IBlogMetaService" mapTo="BlogMetaService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="ICommentService" mapTo="CommentService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="ICommentMetaService" mapTo="CommentMetaService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="ILinkService" mapTo="LinkService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="IOptionService" mapTo="OptionService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="IPostService" mapTo="PostService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="IPostMetaService" mapTo="PostMetaService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="ITermService" mapTo="TermService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="ITermRelationService" mapTo="TermRelationService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="IUserService" mapTo="UserService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>

    <register type="IUserMetaService" mapTo="UserMetaService">
      <interceptor type="InterfaceInterceptor" />
      <lifetime type="singleton" />
      <policyInjection />
    </register>
  
  </container>  

</unity>
